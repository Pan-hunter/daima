#include <stdio.h>
#include <stdlib.h>
#include <malloc.h>
typedef struct book
{
    char name[20];
    int price;
    int nb;
}Book;
typedef struct LNode
{
    Book data;
    struct LNode*next;
}LNode,*LinkList;
void TravelList(LinkList);

LinkList CreatList(LinkList head)
{
    head=(LinkList)malloc(sizeof(LNode));
    LinkList pnew,pend;
    pend=head;
    pend->next=NULL;
    int len,i;
    printf("请输入要存储书本的本数\n");
    scanf("%d",&len);
    for(i=0;i<len;i++)
    {
        pnew=(LinkList)malloc(sizeof(LNode));
        printf("输入第%d本书资料",i+1);

        printf("\n输入名字  输入序号  输入价格\n");
        scanf("%s %d %d",pnew->data.name,&pnew->data.nb,&pnew->data.price);
       pnew->next=NULL;
       pend->next=pnew;
       pend=pnew;
    }
    printf("创建成功!\n");
    return head;
    }
void TravelList(LinkList head)
{
    LinkList item;
    item=head->next;
    printf("表中书的信息如下\n");
    printf("\n名字 序号 价格\n");
    while(item!=NULL)
    {
        printf("%s %d %d\n",item->data.name,item->data.nb,item->data.price);
        printf("\n");
        item=item->next;
    }
     return;
}
void Delete(LinkList head)
{
    LinkList item,p;
    item=head;
    int n,i;
    printf("请输入要删除的序号\n");
    scanf("%d",&n);
    while(item->data.nb!=n&&(i<n-1))//找i-1的指针域
    {
        item=item->next;
        i++;
        if(!(item->data.nb)||(i>n-1))
            return -1;
    }
    p=item->next;
    item->next=item->next->next;
    printf("删除后");
    TravelList(head);
    free(p);

}
void Insert(LinkList head)
{
    int fro;
    int n,j;
    LinkList nbook,item;
    nbook=(LinkList)malloc(sizeof(LNode));
    printf("插入的书名字 序号 价格\n");
    scanf("%s %d %d",nbook->data.name,&nbook->data.nb,&nbook->data.price);
    //printf("输入插入的位置\n");
    //scanf("%d",&fro);
    while(nbook!=NULL)
    {
        //j++;
        nbook=nbook->next;
    }
    nbook->next=item->next;
    item->next=nbook;
    printf("插入后");
    TravelList(head);
}
int main()
{
   LinkList head=NULL;
   head=CreatList(head);
   //TravelList(head);
   //Delete(head);
   Insert(head);
   return 0;
}
